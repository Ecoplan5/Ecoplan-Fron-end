{"mappings":"AAEA,sBAAsB;AACtB,eAAe;IACX,MAAM,iBAAiB,SAAS,cAAc,CAAC,kBAAkB,KAAK;IACtE,MAAM,aAAa,SAAS,cAAc,CAAC,cAAc,KAAK;IAC9D,MAAM,QAAQ,SAAS,cAAc,CAAC,SAAS,KAAK;IAEpD,IAAI,CAAC,kBAAkB,CAAC,YAAY;QAChC,KAAK,IAAI,CAAC,SAAS,4CAAyC;QAC5D;IACJ;IAEA,IAAI,CAAC,OAAO;QACR,KAAK,IAAI,CAAC,SAAS,wCAAwC;QAC3D;IACJ;IAEA,MAAM,OAAO;QACT,QAAQ;QACR;QACA;QACA;IACJ;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,2CAA2C;YACpE,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,IAAI,SAAS,EAAE,EAAE;YACb,KAAK,IAAI,CAAC,YAAS,oBAAoB;YACvC,WAAW;gBACP,OAAO,QAAQ,GAAG;YACtB,GAAG;QACP,OAAO;YACH,6CAA6C;YAC7C,MAAM,YAAY,MAAM,SAAS,IAAI,IAAI,iCAAiC;YAC1E,MAAM,eAAe,UAAU,OAAO,IAAI,qBAAqB,oCAAoC;YACnG,KAAK,IAAI,CAAC,SAAS,cAAc;QACrC;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC;QACd,2CAA2C;QAC3C,KAAK,IAAI,CAAC,SAAS,mEAA6D;IACpF;AACJ","sources":["src/js/registro.js"],"sourcesContent":["\n\n// Función de registro\nasync function registro() {\n    const nombre_usuario = document.getElementById('nombre_usuario').value;\n    const contrasena = document.getElementById('contrasena').value;\n    const email = document.getElementById('email').value;\n\n    if (!nombre_usuario || !contrasena) {\n        Swal.fire(\"Error\", \"Usuario o contraseña son incorrectos \", \"error\");\n        return;\n    }\n\n    if (!email) {\n        Swal.fire(\"Error\", \"El Correo del usuario es incorrecto \", \"error\");\n        return;\n    }\n\n    const data = {\n        id_rol: 2,\n        nombre_usuario,\n        contrasena,\n        email,\n    };\n\n    try {\n        const response = await fetch('http://localhost:8092/api/createUsuario', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (response.ok) {\n            Swal.fire(\"Éxito\", \"Registro exitoso\", \"success\");\n            setTimeout(() => {\n                window.location = \"/login.html\"; \n            }, 1000);\n        } else {\n            // Error del servidor o usuario no encontrado\n            const errorData = await response.json(); // Leer el cuerpo de la respuesta\n            const mensajeError = errorData.mensaje || \"Error desconocido\"; // Fallback si no se incluye mensaje\n            Swal.fire(\"Error\", mensajeError, \"error\");\n        }\n    } catch (error) {\n        console.error(error);\n        // Error de conexión o problema en el fetch\n        Swal.fire(\"Error\", \"No se pudo conectar con el servidor. Inténtalo más tarde.\", \"error\");\n    }\n}\n"],"names":[],"version":3,"file":"registro.2781c9a8.js.map","sourceRoot":"/__parcel_source_root/"}