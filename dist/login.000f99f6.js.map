{"mappings":"AAAA,eAAe;IACX,MAAM,iBAAiB,SAAS,cAAc,CAAC,kBAAkB,KAAK;IACtE,MAAM,aAAa,SAAS,cAAc,CAAC,cAAc,KAAK;IAE9D,IAAI,CAAC,kBAAkB,CAAC,YAAY;QAChC,KAAK,IAAI,CAAC,SAAS,2CAAwC;QAC3D;IACJ;IAEA,MAAM,OAAO;QACT;QACA;IACJ;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,mCAAmC;YAC5D,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,IAAI,SAAS,EAAE,EAAE;YACb,MAAM,eAAe,MAAM,SAAS,IAAI;YAExC,8CAA8C;YAC9C,IAAI,aAAa,KAAK,EAAE;gBACpB,QAAQ,GAAG,CAAC,mBAAmB,aAAa,KAAK,GAAI,6BAA6B;gBAElF,yDAAyD;gBACzD,aAAa,OAAO,CAAC,SAAS,aAAa,KAAK;gBAEhD,KAAK,IAAI,CAAC,YAAS,iBAAiB;gBACpC,WAAW;oBACP,OAAO,QAAQ,GAAG;gBACtB,GAAG;YACP,OACI,KAAK,IAAI,CAAC,SAAS,uCAAiC;QAE5D,OAAO;YACH,6CAA6C;YAC7C,MAAM,YAAY,MAAM,SAAS,IAAI,IAAI,iCAAiC;YAC1E,MAAM,eAAe,UAAU,OAAO,IAAI,qBAAqB,oCAAoC;YACnG,KAAK,IAAI,CAAC,SAAS,cAAc;QACrC;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC;QACd,2CAA2C;QAC3C,KAAK,IAAI,CAAC,SAAS,mEAA6D;IACpF;AACJ","sources":["src/js/login.js"],"sourcesContent":["async function login() {\r\n    const nombre_usuario = document.getElementById('nombre_usuario').value;\r\n    const contrasena = document.getElementById('contrasena').value;\r\n\r\n    if (!nombre_usuario || !contrasena) {\r\n        Swal.fire(\"Error\", \"Usuario o contraseña son incorrectos\", \"error\");\r\n        return;\r\n    }\r\n\r\n    const data = {\r\n        nombre_usuario,\r\n        contrasena,\r\n    };\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:8092/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const responseData = await response.json();\r\n            \r\n            // Verificar si el backend ha enviado un token\r\n            if (responseData.token) {\r\n                console.log(\"Token recibido:\", responseData.token);  // Ver el token en la consola\r\n\r\n                // Guardar el token en localStorage para su uso posterior\r\n                localStorage.setItem('token', responseData.token);\r\n\r\n                Swal.fire(\"Éxito\", \"Login exitoso\", \"success\");\r\n                setTimeout(() => {\r\n                    window.location = \"index.html\"; \r\n                }, 2000);\r\n            } else {\r\n                Swal.fire(\"Error\", \"No se recibió un token válido\", \"error\");\r\n            }\r\n        } else {\r\n            // Error del servidor o usuario no encontrado\r\n            const errorData = await response.json(); // Leer el cuerpo de la respuesta\r\n            const mensajeError = errorData.mensaje || \"Error desconocido\"; // Fallback si no se incluye mensaje\r\n            Swal.fire(\"Error\", mensajeError, \"error\");\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        // Error de conexión o problema en el fetch\r\n        Swal.fire(\"Error\", \"No se pudo conectar con el servidor. Inténtalo más tarde.\", \"error\");\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"login.000f99f6.js.map","sourceRoot":"/__parcel_source_root/"}